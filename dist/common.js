export function getJson(t){const s=new XMLHttpRequest;return s.open("GET","./dist/json/"+t+".json",!1),s.send(null),JSON.parse(s.responseText)}export function getLanguage(t){try{return getJson("ui-"+t)}catch(s){console.error(s),alert(t+" is not a valid language")}return getLanguage("en")}export function matchAxisTier(t,s){if(t<0||t>100||Number.isNaN(t))throw new Error(`Invalid score: ${t}%`);const e=[10,25,45,55,75,90,100];for(let i=0;i<e.length;i++){const l=e[i];if(t>=(e[i-1]??0)&&t<=l)return s[i]}throw new Error("Missing label")}export function orderScores(t,s,e){const i=t.length;for(const l of e){let e=0;for(let o=0;o<i;o++){const i=Math.abs(t[o]-l.stats[o]);e+=s[o]*Math.pow(i/100,3)}e/=i,l.score=e}return e.sort(((t,s)=>t.score-s.score)),e}export class Canvas{canvas;ctx;font;bgColor;fgColor;constructor(t,s,e,i,l,o){this.canvas=t,this.canvas.width=s,this.canvas.height=e,this.ctx=this.canvas.getContext("2d"),this.font=i,this.bgColor=o,this.fgColor=l,this.ctx.fillStyle=this.bgColor,this.ctx.fillRect(0,0,s,e)}setFontsize(t){this.ctx.font=t.toFixed(0)+"px "+this.font}drawHeader(t,s,e,i){this.ctx.fillStyle=this.fgColor,this.ctx.textAlign="start",this.ctx.font="64px titlefont",this.ctx.fillText(t,32,80,490),this.ctx.textAlign="end",this.setFontsize(16),this.ctx.fillText(s,768,48),this.ctx.fillText(e,768,80),this.ctx.textAlign="left",this.setFontsize(48),this.ctx.fillText(i,32,144)}drawBar(t,s,e,i){const l=112*t,o=l+160,n=l+208,c=l+214,r=l+252,h=l+192;this.ctx.fillStyle=this.bgColor,this.ctx.fillRect(128,o,544,112),this.ctx.fillStyle="black",this.ctx.fillRect(128,n,544,64),this.ctx.fillStyle=s[0];const x=5.44*e-3;this.ctx.fillRect(128,c,x,52),this.ctx.fillStyle=s[1];const a=403-5.44*(50-e),f=5.44*(100-e)-3;if(this.ctx.fillRect(a,c,f,52),this.setFontsize(32),this.ctx.fillStyle="#080808",e>20){this.ctx.textAlign="left";const t=e.toFixed(1)+"%";this.ctx.fillText(t,136,r)}if(e<80){this.ctx.textAlign="right";const t=(100-e).toFixed(1)+"%";this.ctx.fillText(t,664,r)}this.ctx.fillStyle=this.fgColor,this.ctx.textAlign="center",this.setFontsize(24),this.ctx.fillText(i,400,h)}drawImages(t,s){t.forEach(((t,e)=>{const i=192+112*s,l=32+640*e,o=new Image;o.src=t,o.addEventListener("load",(()=>this.ctx.drawImage(o,l,i,96,96)))}))}}
//# sourceMappingURL=common.js.map